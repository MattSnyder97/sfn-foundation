// /lib/generateContentIndex.js
const fs = require("fs");
const path = require("path");

const contentDirs = [
  "src/content/info-pages/about",
  "src/content/info-pages/research",
  "src/content/info-pages/resources",
  "src/content/legal",
  "src/content/patient-stories",
];

const sectionMap = {
  "src/content/info-pages/about": "About",
  "src/content/info-pages/research": "Research",
  "src/content/info-pages/resources": "Resources",
  "src/content/legal": "Legal",
  "src/content/patient-stories": "Patient Stories"
};

const indexFile = "src/content/index.ts";
const imports = [];
const sectionVars = {};

contentDirs.forEach(function(dir) {
  const section = sectionMap[dir] || dir;
  const files = fs.readdirSync(dir).filter(function(f) { return f.endsWith(".ts"); });
  imports.push(`\n// ===== ${section} =====`);
  sectionVars[section] = [];
  files.forEach(function(file) {
    // Remove .ts extension, convert to camelCase, and append 'Content'
    const base = file.replace(/\.ts$/, "");
    const varName = base
      .replace(/-([a-z])/g, function(_, c) { return c.toUpperCase(); }) // kebab to camel
      .replace(/^[a-z]/, function(c) { return c.toLowerCase(); }) + "Content";
    const importPath = "./" + path.relative("src/content", path.join(dir, base)).replace(/\\/g, "/");
    imports.push(`import { ${varName} } from "${importPath}";`);
    sectionVars[section].push(varName);
  });
});

let allContentOutput = "export const allContent = [\n";
Object.keys(sectionVars).forEach(function(section) {
  allContentOutput += `  // ${section}\n`;
  sectionVars[section].forEach(function(v) {
    allContentOutput += `  ...[${v}],\n`;
  });
  allContentOutput += "\n";
});
allContentOutput += "];\n";

const output = `// AUTO-GENERATED BY /lib/generateContentIndex.js

// Run "node src/lib/generateContentIndex.js" to generate

${imports.join("\n")}

${allContentOutput}`;

fs.writeFileSync(indexFile, output);
console.log(`Generated ${indexFile} with ${Object.values(sectionVars).flat().length} content modules.`);